// Mocks generated by Mockito 5.4.2 from annotations
// in tripplanner/test/unit_test/profile_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i9;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tripplanner/core/failure/failure.dart' as _i6;
import 'package:tripplanner/features/user_profile/domain/entity/password_entity.dart'
    as _i8;
import 'package:tripplanner/features/user_profile/domain/entity/profile_entity.dart'
    as _i7;
import 'package:tripplanner/features/user_profile/domain/repository/profile_repository.dart'
    as _i2;
import 'package:tripplanner/features/user_profile/domain/use_case/profile_use_case.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIProfileRepository_0 extends _i1.SmartFake
    implements _i2.IProfileRepository {
  _FakeIProfileRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileUseCase extends _i1.Mock implements _i4.ProfileUseCase {
  @override
  _i2.IProfileRepository get profileRepository => (super.noSuchMethod(
        Invocation.getter(#profileRepository),
        returnValue: _FakeIProfileRepository_0(
          this,
          Invocation.getter(#profileRepository),
        ),
        returnValueForMissingStub: _FakeIProfileRepository_0(
          this,
          Invocation.getter(#profileRepository),
        ),
      ) as _i2.IProfileRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.ProfileEntity>>> getUserInfo() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserInfo,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.ProfileEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.ProfileEntity>>(
          this,
          Invocation.method(
            #getUserInfo,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.ProfileEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.ProfileEntity>>(
          this,
          Invocation.method(
            #getUserInfo,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.ProfileEntity>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> changePassword(
          _i8.PasswordEntity? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [password],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #changePassword,
            [password],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #changePassword,
            [password],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> editProfile(
          _i7.ProfileEntity? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #editProfile,
          [profile],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #editProfile,
            [profile],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #editProfile,
            [profile],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> uploadProfilePicture(
          _i9.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePicture,
          [file],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #uploadProfilePicture,
            [file],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, String>>.value(
                _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #uploadProfilePicture,
            [file],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
